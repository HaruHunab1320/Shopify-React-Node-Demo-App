{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField } from \"@shopify/polaris\";\nimport store from \"store-js\";\nimport gql from \"graphql-tag\";\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n\nclass EditProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: \"\",\n      price: \"\",\n      variantId: \"\"\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"itemToBeConsumed\", () => {\n      const item = store.get(\"item\");\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({\n        price,\n        variantId\n      });\n      return (price - discounter).toFixed(2);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      discount: this.itemToBeConsumed()\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      discount,\n      variantId\n    } = this.state;\n    return /*#__PURE__*/_jsx(Page, {\n      children: /*#__PURE__*/_jsx(Layout, {\n        children: /*#__PURE__*/_jsxs(Layout.Section, {\n          children: [/*#__PURE__*/_jsx(DisplayText, {\n            size: \"large\",\n            children: name\n          }), /*#__PURE__*/_jsxs(Form, {\n            children: [/*#__PURE__*/_jsx(Card, {\n              sectioned: true,\n              children: /*#__PURE__*/_jsxs(FormLayout, {\n                children: [/*#__PURE__*/_jsxs(FormLayout.Group, {\n                  children: [/*#__PURE__*/_jsx(TextField, {\n                    prefix: \"$\",\n                    value: price,\n                    disabled: true,\n                    label: \"Original price\",\n                    type: \"price\"\n                  }), /*#__PURE__*/_jsx(TextField, {\n                    prefix: \"$\",\n                    value: discount,\n                    onChange: this.handleChange(\"discount\"),\n                    label: \"Discounted price\",\n                    type: \"discount\"\n                  })]\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  children: \"This sale price will expire in two weeks\"\n                })]\n              })\n            }), /*#__PURE__*/_jsx(PageActions, {\n              primaryAction: [{\n                content: \"Save\",\n                onAction: () => {\n                  console.log(\"submitted\");\n                }\n              }],\n              secondaryActions: [{\n                content: \"Remove discount\"\n              }]\n            })]\n          })]\n        })\n      })\n    });\n  }\n\n}\n\nexport default EditProducts;","map":{"version":3,"sources":["C:/Users/Jakob/Documents/shopify-app-tutorial/pages/edit-products.js"],"names":["React","Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","store","gql","UPDATE_PRICE","EditProducts","Component","discount","price","variantId","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","componentDidMount","itemToBeConsumed","render","name","state","handleChange","content","onAction","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  DisplayText,\r\n  Form,\r\n  FormLayout,\r\n  Layout,\r\n  Page,\r\n  PageActions,\r\n  TextField,\r\n} from \"@shopify/polaris\";\r\nimport store from \"store-js\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst UPDATE_PRICE = gql`\r\n  mutation productVariantUpdate($input: ProductVariantInput!) {\r\n    productVariantUpdate(input: $input) {\r\n      product {\r\n        title\r\n      }\r\n      productVariant {\r\n        id\r\n        price\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass EditProducts extends React.Component {\r\n  state = {\r\n    discount: \"\",\r\n    price: \"\",\r\n    variantId: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ discount: this.itemToBeConsumed() });\r\n  }\r\n\r\n  render() {\r\n    const { name, price, discount, variantId } = this.state;\r\n\r\n    return (\r\n      <Page>\r\n        <Layout>\r\n          <Layout.Section>\r\n            <DisplayText size=\"large\">{name}</DisplayText>\r\n            <Form>\r\n              <Card sectioned>\r\n                <FormLayout>\r\n                  <FormLayout.Group>\r\n                    <TextField\r\n                      prefix=\"$\"\r\n                      value={price}\r\n                      disabled={true}\r\n                      label=\"Original price\"\r\n                      type=\"price\"\r\n                    />\r\n                    <TextField\r\n                      prefix=\"$\"\r\n                      value={discount}\r\n                      onChange={this.handleChange(\"discount\")}\r\n                      label=\"Discounted price\"\r\n                      type=\"discount\"\r\n                    />\r\n                  </FormLayout.Group>\r\n                  <p>This sale price will expire in two weeks</p>\r\n                </FormLayout>\r\n              </Card>\r\n              <PageActions\r\n                primaryAction={[\r\n                  {\r\n                    content: \"Save\",\r\n                    onAction: () => {\r\n                      console.log(\"submitted\");\r\n                    },\r\n                  },\r\n                ]}\r\n                secondaryActions={[\r\n                  {\r\n                    content: \"Remove discount\",\r\n                  },\r\n                ]}\r\n              />\r\n            </Form>\r\n          </Layout.Section>\r\n        </Layout>\r\n      </Page>\r\n    );\r\n  }\r\n\r\n  handleChange = (field) => {\r\n    return (value) => this.setState({ [field]: value });\r\n  };\r\n\r\n  itemToBeConsumed = () => {\r\n    const item = store.get(\"item\");\r\n    const price = item.variants.edges[0].node.price;\r\n    const variantId = item.variants.edges[0].node.id;\r\n    const discounter = price * 0.1;\r\n    this.setState({ price, variantId });\r\n    return (price - discounter).toFixed(2);\r\n  };\r\n}\r\n\r\nexport default EditProducts;\r\n"]},"metadata":{},"sourceType":"module"}