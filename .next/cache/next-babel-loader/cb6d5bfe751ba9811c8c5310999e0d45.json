{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField } from \"@shopify/polaris\";\nimport store from \"store-js\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n\nclass EditProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: \"\",\n      price: \"\",\n      variantId: \"\"\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"itemToBeConsumed\", () => {\n      const item = store.get(\"item\");\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({\n        price,\n        variantId\n      });\n      return (price - discounter).toFixed(2);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      discount: this.itemToBeConsumed()\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      discount,\n      variantId\n    } = this.state;\n    return /*#__PURE__*/_jsx(Mutation, {\n      mutation: UPDATE_PRICE,\n      children: (handleSubmit, {\n        error,\n        data\n      }) => {\n        return /*#__PURE__*/_jsx(Page, {\n          children: /*#__PURE__*/_jsx(Layout, {\n            children: /*#__PURE__*/_jsxs(Layout.Section, {\n              children: [/*#__PURE__*/_jsx(DisplayText, {\n                size: \"large\",\n                children: name\n              }), /*#__PURE__*/_jsxs(Form, {\n                children: [/*#__PURE__*/_jsx(Card, {\n                  sectioned: true,\n                  children: /*#__PURE__*/_jsxs(FormLayout, {\n                    children: [/*#__PURE__*/_jsxs(FormLayout.Group, {\n                      children: [/*#__PURE__*/_jsx(TextField, {\n                        prefix: \"$\",\n                        value: price,\n                        disabled: true,\n                        label: \"Original price\",\n                        type: \"price\"\n                      }), /*#__PURE__*/_jsx(TextField, {\n                        prefix: \"$\",\n                        value: discount,\n                        onChange: this.handleChange(\"discount\"),\n                        label: \"Discounted price\",\n                        type: \"discount\"\n                      })]\n                    }), /*#__PURE__*/_jsx(\"p\", {\n                      children: \"This sale price will expire in two weeks\"\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(PageActions, {\n                  primaryAction: [{\n                    content: \"Save\",\n                    onAction: () => {\n                      const productVariableInput = {\n                        id: variantId,\n                        price: discount\n                      };\n                    }\n                  }],\n                  secondaryActions: [{\n                    content: \"Remove discount\"\n                  }]\n                })]\n              })]\n            })\n          })\n        });\n      }\n    });\n  }\n\n}\n\nexport default EditProducts;","map":{"version":3,"sources":["C:/Users/Jakob/Documents/shopify-app-tutorial/pages/edit-products.js"],"names":["React","Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","store","gql","Mutation","UPDATE_PRICE","EditProducts","Component","discount","price","variantId","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","componentDidMount","itemToBeConsumed","render","name","state","handleSubmit","error","data","handleChange","content","onAction","productVariableInput"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  DisplayText,\r\n  Form,\r\n  FormLayout,\r\n  Layout,\r\n  Page,\r\n  PageActions,\r\n  TextField,\r\n} from \"@shopify/polaris\";\r\nimport store from \"store-js\";\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\n\r\nconst UPDATE_PRICE = gql`\r\n  mutation productVariantUpdate($input: ProductVariantInput!) {\r\n    productVariantUpdate(input: $input) {\r\n      product {\r\n        title\r\n      }\r\n      productVariant {\r\n        id\r\n        price\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass EditProducts extends React.Component {\r\n  state = {\r\n    discount: \"\",\r\n    price: \"\",\r\n    variantId: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ discount: this.itemToBeConsumed() });\r\n  }\r\n\r\n  render() {\r\n    const { name, price, discount, variantId } = this.state;\r\n    return (\r\n      <Mutation mutation={UPDATE_PRICE}>\r\n        {(handleSubmit, { error, data }) => {\r\n          return (\r\n            <Page>\r\n              <Layout>\r\n                <Layout.Section>\r\n                  <DisplayText size=\"large\">{name}</DisplayText>\r\n                  <Form>\r\n                    <Card sectioned>\r\n                      <FormLayout>\r\n                        <FormLayout.Group>\r\n                          <TextField\r\n                            prefix=\"$\"\r\n                            value={price}\r\n                            disabled={true}\r\n                            label=\"Original price\"\r\n                            type=\"price\"\r\n                          />\r\n                          <TextField\r\n                            prefix=\"$\"\r\n                            value={discount}\r\n                            onChange={this.handleChange(\"discount\")}\r\n                            label=\"Discounted price\"\r\n                            type=\"discount\"\r\n                          />\r\n                        </FormLayout.Group>\r\n                        <p>This sale price will expire in two weeks</p>\r\n                      </FormLayout>\r\n                    </Card>\r\n                    <PageActions\r\n                      primaryAction={[\r\n                        {\r\n                          content: \"Save\",\r\n                          onAction: () => {\r\n                            const productVariableInput = {\r\n                              id: variantId,\r\n                              price: discount,\r\n                            };\r\n                          },\r\n                        },\r\n                      ]}\r\n                      secondaryActions={[\r\n                        {\r\n                          content: \"Remove discount\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </Form>\r\n                </Layout.Section>\r\n              </Layout>\r\n            </Page>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n\r\n  handleChange = (field) => {\r\n    return (value) => this.setState({ [field]: value });\r\n  };\r\n\r\n  itemToBeConsumed = () => {\r\n    const item = store.get(\"item\");\r\n    const price = item.variants.edges[0].node.price;\r\n    const variantId = item.variants.edges[0].node.id;\r\n    const discounter = price * 0.1;\r\n    this.setState({ price, variantId });\r\n    return (price - discounter).toFixed(2);\r\n  };\r\n}\r\n\r\nexport default EditProducts;\r\n"]},"metadata":{},"sourceType":"module"}