{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\"; // import React from \"react\";\n\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from \"@shopify/polaris\";\nimport store from \"store-js\"; // graphQL query as a constant\n\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts() {\n    _classCallCheck(this, ResourceListWithProducts);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n      return /*#__PURE__*/_jsx(Query, {\n        query: GET_PRODUCTS_BY_ID,\n        variables: {\n          ids: store.get(\"ids\")\n        },\n        children: function children(_ref) {\n          var data = _ref.data,\n              loading = _ref.loading,\n              error = _ref.error;\n          if (loading) return /*#__PURE__*/_jsx(\"div\", {\n            children: \"Loading...\"\n          });\n          if (error) return /*#__PURE__*/_jsx(\"div\", {\n            children: error.message\n          });\n          console.log(data);\n          return /*#__PURE__*/_jsx(Card, {\n            children: /*#__PURE__*/_jsx(ResourceList, {\n              showHeader: true,\n              resourceName: {\n                singular: \"Product\",\n                plural: \"Products\"\n              },\n              items: data.nodes,\n              renderItem: function renderItem(item) {\n                // console.log(item);\n                var media = /*#__PURE__*/_jsx(Thumbnail, {\n                  source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : \"\",\n                  alt: item.images.edges[0] ? item.images.edges[0].node.altText : \"\"\n                });\n\n                var price = item.variants.edges[0].node.price;\n                return (\n                  /*#__PURE__*/\n                  // <ResourceList.Item\n                  //   id={item.id}\n                  //   media={media}\n                  //   accessibilityLabel={`View details for ${item.title}`}\n                  // >\n                  //   <Stack>\n                  //     <Stack.Item fill>\n                  //       <h3>\n                  //         <TextStyle variation=\"strong\">\n                  //           {item.title}\n                  //         </TextStyle>\n                  //       </h3>\n                  //     </Stack.Item>\n                  //     <Stack.Item>\n                  //       <p>${price}</p>\n                  //     </Stack.Item>\n                  //     <Stack.item>\n                  //       <p>Expires on {twoWeeksFromNow}</p>\n                  //     </Stack.item>\n                  //   </Stack>\n                  // </ResourceList.Item>\n                  _jsx(\"h1\", {\n                    children: \"tset\"\n                  })\n                );\n              }\n            })\n          });\n        }\n      });\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["C:/Users/Jakob/Documents/shopify-app-tutorial/components/ResourceList.js"],"names":["React","gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACEC,IADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,UAAlB,C,CAEA;;AACA,IAAMC,kBAAkB,GAAGR,GAAH,mBAAxB;;IA6BMS,wB;;;;;;;;;;;;;6BACK;AACP,UAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,EAA+BC,YAA/B,EAAxB;AACA,0BACE,KAAC,KAAD;AAAO,QAAA,KAAK,EAAEL,kBAAd;AAAkC,QAAA,SAAS,EAAE;AAAEM,UAAAA,GAAG,EAAEP,KAAK,CAACQ,GAAN,CAAU,KAAV;AAAP,SAA7C;AAAA,kBACG,wBAA8B;AAAA,cAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,cAArBC,OAAqB,QAArBA,OAAqB;AAAA,cAAZC,KAAY,QAAZA,KAAY;AAC7B,cAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA,YAAP;AACb,cAAIC,KAAJ,EAAW,oBAAO;AAAA,sBAAMA,KAAK,CAACC;AAAZ,YAAP;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,8BACE,KAAC,IAAD;AAAA,mCACE,KAAC,YAAD;AACE,cAAA,UAAU,MADZ;AAEE,cAAA,YAAY,EAAE;AAAEM,gBAAAA,QAAQ,EAAE,SAAZ;AAAuBC,gBAAAA,MAAM,EAAE;AAA/B,eAFhB;AAGE,cAAA,KAAK,EAAEP,IAAI,CAACQ,KAHd;AAIE,cAAA,UAAU,EAAE,oBAACC,IAAD,EAAU;AACpB;AACA,oBAAMC,KAAK,gBACT,KAAC,SAAD;AACE,kBAAA,MAAM,EACJD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACIH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAD9B,GAEI,EAJR;AAME,kBAAA,GAAG,EACDL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACIH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BE,OAD9B,GAEI;AATR,kBADF;;AAcA,oBAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAtBF;AAwBD;AA7CH;AADF,YADF;AAmDD;AAxDH,QADF;AA4DD;;;;EA/DoCjC,KAAK,CAACmC,S;;AAkE7C,eAAezB,wBAAf","sourcesContent":["import React from \"react\";\r\n// import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport {\r\n  Card,\r\n  ResourceList,\r\n  Stack,\r\n  TextStyle,\r\n  Thumbnail,\r\n} from \"@shopify/polaris\";\r\nimport store from \"store-js\";\r\n\r\n// graphQL query as a constant\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        descriptionHtml\r\n        id\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 1) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass ResourceListWithProducts extends React.Component {\r\n  render() {\r\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\r\n    return (\r\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get(\"ids\") }}>\r\n        {({ data, loading, error }) => {\r\n          if (loading) return <div>Loading...</div>;\r\n          if (error) return <div>{error.message}</div>;\r\n          console.log(data);\r\n          return (\r\n            <Card>\r\n              <ResourceList\r\n                showHeader\r\n                resourceName={{ singular: \"Product\", plural: \"Products\" }}\r\n                items={data.nodes}\r\n                renderItem={(item) => {\r\n                  // console.log(item);\r\n                  const media = (\r\n                    <Thumbnail\r\n                      source={\r\n                        item.images.edges[0]\r\n                          ? item.images.edges[0].node.originalSrc\r\n                          : \"\"\r\n                      }\r\n                      alt={\r\n                        item.images.edges[0]\r\n                          ? item.images.edges[0].node.altText\r\n                          : \"\"\r\n                      }\r\n                    />\r\n                  );\r\n                  const price = item.variants.edges[0].node.price;\r\n                  return (\r\n                    // <ResourceList.Item\r\n                    //   id={item.id}\r\n                    //   media={media}\r\n                    //   accessibilityLabel={`View details for ${item.title}`}\r\n                    // >\r\n                    //   <Stack>\r\n                    //     <Stack.Item fill>\r\n                    //       <h3>\r\n                    //         <TextStyle variation=\"strong\">\r\n                    //           {item.title}\r\n                    //         </TextStyle>\r\n                    //       </h3>\r\n                    //     </Stack.Item>\r\n                    //     <Stack.Item>\r\n                    //       <p>${price}</p>\r\n                    //     </Stack.Item>\r\n                    //     <Stack.item>\r\n                    //       <p>Expires on {twoWeeksFromNow}</p>\r\n                    //     </Stack.item>\r\n                    //   </Stack>\r\n                    // </ResourceList.Item>\r\n                    <h1>tset</h1>\r\n                  );\r\n                }}\r\n              />\r\n            </Card>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResourceListWithProducts;\r\n"]},"metadata":{},"sourceType":"module"}